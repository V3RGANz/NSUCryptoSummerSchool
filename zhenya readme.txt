Комментарии и вопросы к твоей интерпретации нашего кода:

-Зачем нужны public setW, setH? По-моему, менять матрицу напрямую таким образом не ок.
-Убери summary, можешь оставить коммент в строке перед идентификатором функции, тогда в Студии будет всплывающая подсказка.
-printf("%d\n", A.getW()); (main.cpp) это зачем? Если это нужное, то напиши
std::cout << endl << A.getW(); как-то так.
-(*this)[i][j] = minvalue + rand() % maxvalue; (matrix.cpp) Ты, наверное, имел в виду % (maxvalue - minvalue + 1), в общем, как было, только там знак перепутан.
-Почему у тебя все классы в 1 заголовочном файле, и зачем тебе header.h? Напиши их в этом header.h хотя бы.
-В чем смысл использовать вектора вместо массивов для хранения матрицы? Ну кроме того, чтобы не передавать длину через параметр, имхо с массивами проще.
-// source matrix shouldn't be less than k*k
	if (k > (M.getH() < M.getW() ? M.getH() : M.getW()))
		this->SetData({}); (grassmanmatrix.cpp) зачем тебе оба измерения проверять, она же квадратная? Ты так-то еще на 0 не проверяешь.
-if (n != 0) { - напиши if (n), не будь Лукасом
-else {
			(*this)[line][column] = Minor(K);
			if (line == this->getH()) {
				line++;
				column = 0;
			}
			else
				column++;
		} (там же) зачем кусок с line и column засунул в else?

В общем, разберись с этим, посмотри, че я написал, я, например, С поменял.